#!/usr/bin/env python3
"""
Test script for weather functionality in TravelAIAgent
"""

from app.ai_agent import TravelAIAgent
from config import Config
import os

def test_weather_queries():
    """Test various weather-related queries"""
    
    # Check if OpenWeather API key is configured
    if not Config.OPENWEATHER_API_KEY:
        print("‚ùå OpenWeather API key not configured in .env file")
        print("Please add OPENWEATHER_API_KEY=your_api_key_here to .env")
        return
    
    # Initialize the AI agent
    print("üöÄ Initializing TravelAIAgent...")
    agent = TravelAIAgent()
    
    # Test queries
    test_queries = [
        "Th·ªùi ti·∫øt ·ªü H√† N·ªôi h√¥m nay nh∆∞ th·∫ø n√†o?",
        "T√¥i mu·ªën ƒëi du l·ªãch ƒê√† N·∫µng, th·ªùi ti·∫øt th·∫ø n√†o?",
        "H·ªì Ch√≠ Minh City c√≥ m∆∞a kh√¥ng?",
        "H·ªôi An th·ªùi ti·∫øt ra sao?",
        "T√¥i mu·ªën bi·∫øt th·ªùi ti·∫øt ·ªü Sapa",
        "Du l·ªãch Ph√∫ Qu·ªëc n√™n m·∫∑c g√¨?"
    ]
    
    print("\n" + "="*60)
    print("üå§Ô∏è  TESTING WEATHER FUNCTIONALITY")
    print("="*60)
    
    for i, query in enumerate(test_queries, 1):
        print(f"\nüîç Test {i}: {query}")
        print("-" * 50)
        
        try:
            response = agent.process_query(query)
            print(f"‚úÖ Response:\n{response}")
        except Exception as e:
            print(f"‚ùå Error: {str(e)}")
        
        print("-" * 50)

def test_location_extraction():
    """Test location extraction functionality"""
    from app.ai_agent import TravelAIAgent
    
    agent = TravelAIAgent()
    
    test_cases = [
        "H√† N·ªôi l√† th·ªß ƒë√¥ c·ªßa Vi·ªát Nam v·ªõi nhi·ªÅu di t√≠ch l·ªãch s·ª≠...",
        "Du l·ªãch ƒê√† N·∫µng r·∫•t th√∫ v·ªã v·ªõi b√£i bi·ªÉn M·ªπ Kh√™...",
        "Sapa l√† v√πng n√∫i ph√≠a B·∫Øc n·ªïi ti·∫øng v·ªõi ru·ªông b·∫≠c thang...",
        "Ph·ªü b√≤ l√† m√≥n ƒÉn truy·ªÅn th·ªëng c·ªßa Vi·ªát Nam...",  # Kh√¥ng c√≥ ƒë·ªãa ƒëi·ªÉm c·ª• th·ªÉ
    ]
    
    print("\n" + "="*60)
    print("üìç TESTING LOCATION EXTRACTION FROM RESPONSE")
    print("="*60)
    
    for i, response_text in enumerate(test_cases, 1):
        print(f"\n{i}. Response: {response_text}")
        location = agent._extract_location(response_text)
        print(f"   Extracted location: '{location}'")
        print("-" * 50)

if __name__ == "__main__":
    print("üåü Weather Testing for ChatbotTravel")
    print("="*60)
    
    # Test location extraction first
    test_location_extraction()
    
    # Test full weather queries
    test_weather_queries()
    
    print("\n‚úÖ Testing completed!")
